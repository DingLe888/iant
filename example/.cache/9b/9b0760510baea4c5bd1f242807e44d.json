{"id":"../node_modules/bee/lib/util.js","dependencies":[{"name":"/Users/hufeng/OSS/bee/example/package.json","includedInParent":true,"mtime":1548325845268},{"name":"/Users/hufeng/OSS/bee/node_modules/bee/package.json","includedInParent":true,"mtime":1548325580243}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * 根据路径获取对应路径的值\n * 很有immatable获取值得感觉，这样做的好处在于深度获取对象的值\n * 可以不写那么多的值判断，当发现路径中对应的值是undefined时候提前返回\n * 另外，很容易在内部去cache\n * @param data\n * @param path\n */\nexports.getPathVal = function (data, path) {\n    if (exports.isArray(path)) {\n        var result = data;\n        for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n            var p = path_1[_i];\n            result = result[p];\n            if (typeof result === 'undefined') {\n                return undefined;\n            }\n        }\n        return result;\n    }\n    else if (exports.isStr(path)) {\n        //support 'list.0.id'\n        if (path.indexOf('.') != -1) {\n            return exports.getPathVal(data, path.split('.'));\n        }\n        return data[path];\n    }\n};\nvar toString = Object.prototype.toString;\n/**\n * 获取当前参数的类型\n * @param param\n */\nexports.type = function (param) { return toString.call(param); };\n/**\n * 判断当前的参数是不是字符串\n * @param param\n */\nexports.isStr = function (param) {\n    return exports.type(param) === '[object String]';\n};\n/**\n * 判断当前的参数是不是数组\n * @param param\n */\nexports.isArray = function (param) {\n    return exports.type(param) === '[object Array]';\n};\n/**\n * 判断参数是不是函数\n */\nexports.isFn = function (param) {\n    return exports.type(param) === '[object Function]';\n};\n/**\n * 判断参数是不是对象\n */\nexports.isObj = function (param) {\n    return exports.type(param) === '[object Object]';\n};\n","map":{"mappings":[{"source":"../node_modules/bee/lib/util.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/bee/lib/util.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"../node_modules/bee/lib/util.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * 根据路径获取对应路径的值\n * 很有immatable获取值得感觉，这样做的好处在于深度获取对象的值\n * 可以不写那么多的值判断，当发现路径中对应的值是undefined时候提前返回\n * 另外，很容易在内部去cache\n * @param data\n * @param path\n */\nexports.getPathVal = function (data, path) {\n    if (exports.isArray(path)) {\n        var result = data;\n        for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n            var p = path_1[_i];\n            result = result[p];\n            if (typeof result === 'undefined') {\n                return undefined;\n            }\n        }\n        return result;\n    }\n    else if (exports.isStr(path)) {\n        //support 'list.0.id'\n        if (path.indexOf('.') != -1) {\n            return exports.getPathVal(data, path.split('.'));\n        }\n        return data[path];\n    }\n};\nvar toString = Object.prototype.toString;\n/**\n * 获取当前参数的类型\n * @param param\n */\nexports.type = function (param) { return toString.call(param); };\n/**\n * 判断当前的参数是不是字符串\n * @param param\n */\nexports.isStr = function (param) {\n    return exports.type(param) === '[object String]';\n};\n/**\n * 判断当前的参数是不是数组\n * @param param\n */\nexports.isArray = function (param) {\n    return exports.type(param) === '[object Array]';\n};\n/**\n * 判断参数是不是函数\n */\nexports.isFn = function (param) {\n    return exports.type(param) === '[object Function]';\n};\n/**\n * 判断参数是不是对象\n */\nexports.isObj = function (param) {\n    return exports.type(param) === '[object Object]';\n};\n"},"lineCount":63}},"hash":"f72015a3bbd2c3c516b188d83dcbc718","cacheData":{"env":{}}}